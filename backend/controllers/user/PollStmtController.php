<?php

namespace backend\controllers\user;

use app\models\DialCall;
use app\models\DialInterview;
use app\models\DialPeople;
use app\models\PollQuestion;
use backend\models\Cel;
use backend\models\DialAnswers;
use backend\models\Login;
use backend\models\People;
use backend\models\PollAnswers;
use backend\models\PollList;
use backend\models\PollPeople;
use backend\models\PollView;
use backend\models\SipAccount;
use Yii;
use yii\data\ActiveDataProvider;
use yii\helpers\ArrayHelper;
use yii\rest\Controller;
use yii\web\NotFoundHttpException;

/**
 * RestStmtController implements the Rest controller for Stmt model.
 */
class PollStmtController extends Controller
{
    public $modelClass = 'backend\models\Stmt';
    public $client;
    public $ariAddress = 'ws://192.168.1.47:8088/ari/events?api_key=Operators:Cdvzc)s8kfVaAMn&app=dialer';
    public $sipEndpoints = array('rt', 'mypbx');

    protected function verbs()
    {
        return [
            'index' => ['GET', 'HEAD'],
            'view' => ['GET', 'HEAD'],
            'update' => ['POST', 'PUT'],
            'create' => ['POST'],
            'delete' => ['DELETE'],
            'get-list-stmt' => ['POST'],
            'get-list-users' => ['POST'],
        ];
    }

    /**
     * @param \yii\base\Action $action
     * @return bool
     */
    public function beforeAction($action)
    {
        if($action->id == 'get-people')
        {
            PollPeople::setStatus(Yii::$app->request->get('id'));
        }
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * Lists all Menu models.
     * @return mixed
     */
    public function actionIndex()
    {

    }

    /**
     * @return array|\yii\db\ActiveRecord[]
     */
    public function actionGetPoll()
    {
        $id = Login::getCompanyUser(Yii::$app->user->id)->company;

        $model = PollList::find()
            ->joinWith(['check' => function ($query) use ($id) {
                return $query->where(['company' => $id])->count();
            }, 'name'])
            ->where(['poll_list.status' => '1'])
            ->asArray()
            ->all();

        $res = array();
        foreach ($model as $k=>$item)
        {
            $res[$k] = $item;
            $res[$k]['check'] = count($item['check']);
            $res[$k]['called'] = PollPeople::find()
                ->where(['company' => $id, 'poll_id' => $item['id']])
                ->andWhere(['NOT IN', 'status', ['0', '12']])
                ->count();
        }

        Yii::$app->response->format = \yii\web\Response::FORMAT_JSON;

        return $res;
    }

    /**
     * Список застрахованных лиц для опроса
     * @return array|null|\yii\db\ActiveRecord
     * @throws NotFoundHttpException
     */
    public function actionGetList()
    {
        $request = Yii::$app->request->get();

        $model = PollView::find()
            ->where(['poll_id' => $request['id'], 'company' => Login::getCompanyUser(Yii::$app->user->id)->company])
            ->asArray()
            ->all();

        if (empty($model))
            throw new NotFoundHttpException('400');

        return $model;
    }

    /**
     * @return array|null|\yii\db\ActiveRecord
     * @throws NotFoundHttpException
     */
    public function actionGetPeople()
    {
        $request = Yii::$app->request->get();

        switch (Login::getCompanyUser(Yii::$app->user->id)->company)
        {
            case 1:
                $model = PollView::find()
                    ->where(['pollView.id' => $request['id']])
                    ->andWhere(['pollView.company' => Login::getCompanyUser(Yii::$app->user->id)->company])
                    ->asArray()
                    ->one();
                break;
            default:

                $model = PollView::find()
                    ->where(['pollView.id' => $request['id']])
                    ->andWhere(['pollView.company' => Login::getCompanyUser(Yii::$app->user->id)->company])
                    ->asArray()
                    ->one();
        }

        $poll_key = PollPeople::getPollkey($request['id']);
        $model['questions'] = PollQuestion::find()->where(['poll_id' => $poll_key])->all();

        if(empty($model))
            throw new NotFoundHttpException('400');

        return $model;
    }

    /**
     * @return DialInterview
     */
    public function actionSavePoll()
    {
        $postdata = file_get_contents("php://input");
        $request = json_decode($postdata);

        $model = PollPeople::findOne($request->id);
        $model->user_o = Yii::$app->user->id;
        $model->description = $request->model->description;
        $model->status = empty($request->model->fail)? 1 : 2;

        $model->update();

        Yii::$app->response->format = \yii\web\Response::FORMAT_JSON;

        if ($request->model->question) {
            foreach ($request->model->question as $key => $value) {
                $answer = PollAnswers::findOne(['people_id' => $request->id, 'question_key' => $key]);

                if ($answer) {
                    $answer->answer_key = $value;
                    $model->link('answer', $answer);
                } else {
                    $answer = new PollAnswers();
                    $answer->question_key = $key;
                    $answer->poll_id = PollPeople::findOne($request->id)->poll_id;
                    $answer->answer_key = $value;

                    $model->link('answer', $answer);
                }
            }
        }

        return $model;
    }

    /**
     * @return mixed
     */
    public function actionNotAnswerPoll()
    {
        $postdata = file_get_contents("php://input");
        $request = json_decode($postdata);

        Yii::$app->response->format = \yii\web\Response::FORMAT_JSON;

        $model = PollPeople::findOne($request->id);
        $model->user_o = Yii::$app->user->id;
        $model->status = '10';
        $model->update();

        return $model;
    }

    /**
     * @return mixed
     */
    public function actionReCallPoll()
    {
        $postdata = file_get_contents("php://input");
        $request = json_decode($postdata);

        Yii::$app->response->format = \yii\web\Response::FORMAT_JSON;

        $model = PollPeople::findOne($request->id);
        $model->user_o = Yii::$app->user->id;
        $model->description = $request->model->description?$request->model->description:null;
        $model->status = '11';
        $model->update();

        return $model;
    }

    public function actionNextPoll()
    {
        $postdata = file_get_contents("php://input");
        $request = json_decode($postdata);

        Yii::$app->response->format = \yii\web\Response::FORMAT_JSON;

        $poll = PollPeople::find()->select('poll_id')->where(['id' => $request->id]);

        $next = PollPeople::find()
            ->where(['company' => Login::getCompanyUser(Yii::$app->user->id)->company])
            ->andWhere(['IN', 'poll_id', $poll])
            ->andWhere(['status' => 0])
            ->asArray()
            ->one();

        return $next;
    }
}
